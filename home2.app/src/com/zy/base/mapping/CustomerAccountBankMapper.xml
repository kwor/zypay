<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zy.base.dao.CustomerAccountBankMapper">
  <resultMap id="BaseResultMap" type="com.zy.base.pojo.CustomerAccountBank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="add_time" jdbcType="VARCHAR" property="addTime" />
    <result column="up_time" jdbcType="VARCHAR" property="upTime" />
    <result column="bank_status" jdbcType="TINYINT" property="bankStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zy.base.pojo.CustomerAccountBank">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, bank_account, bank_name, bank_code, add_time, up_time, bank_status
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zy.base.pojo.CustomerAccountBankExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zpay_customer_account_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zy.base.pojo.CustomerAccountBankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zpay_customer_account_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zpay_customer_account_bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zpay_customer_account_bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zy.base.pojo.CustomerAccountBankExample">
    delete from zpay_customer_account_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zy.base.pojo.CustomerAccountBank">
    insert into zpay_customer_account_bank (id, customer_id, bank_account, 
      bank_name, bank_code, add_time, 
      up_time, bank_status, remark
      )
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{bankAccount,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{addTime,jdbcType=VARCHAR}, 
      #{upTime,jdbcType=VARCHAR}, #{bankStatus,jdbcType=TINYINT}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zy.base.pojo.CustomerAccountBank">
    insert into zpay_customer_account_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
      <if test="bankStatus != null">
        bank_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=VARCHAR},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null">
        #{bankStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zy.base.pojo.CustomerAccountBankExample" resultType="java.lang.Long">
    select count(*) from zpay_customer_account_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zpay_customer_account_bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=VARCHAR},
      </if>
      <if test="record.upTime != null">
        up_time = #{record.upTime,jdbcType=VARCHAR},
      </if>
      <if test="record.bankStatus != null">
        bank_status = #{record.bankStatus,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zpay_customer_account_bank
    set id = #{record.id,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=VARCHAR},
      up_time = #{record.upTime,jdbcType=VARCHAR},
      bank_status = #{record.bankStatus,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zpay_customer_account_bank
    set id = #{record.id,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=VARCHAR},
      up_time = #{record.upTime,jdbcType=VARCHAR},
      bank_status = #{record.bankStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zy.base.pojo.CustomerAccountBank">
    update zpay_customer_account_bank
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=VARCHAR},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null">
        bank_status = #{bankStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zy.base.pojo.CustomerAccountBank">
    update zpay_customer_account_bank
    set customer_id = #{customerId,jdbcType=INTEGER},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=VARCHAR},
      up_time = #{upTime,jdbcType=VARCHAR},
      bank_status = #{bankStatus,jdbcType=TINYINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zy.base.pojo.CustomerAccountBank">
    update zpay_customer_account_bank
    set customer_id = #{customerId,jdbcType=INTEGER},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=VARCHAR},
      up_time = #{upTime,jdbcType=VARCHAR},
      bank_status = #{bankStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>